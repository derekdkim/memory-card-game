{"version":3,"sources":["components/Scoreboard/index.js","components/Card/index.js","components/Gameboard/index.js","components/Game/index.js","App.js","index.js"],"names":["Scoreboard","props","score","highScore","id","className","htmlFor","Card","data","selectCard","onClick","style","backgroundColor","hex","name","Gameboard","useState","pickedCards","setPickedCards","blueData","cardList","setCardList","setScore","setHighScore","includes","prevState","useEffect","workingDeck","i","length","j","Math","floor","random","map","card","index","key","Game","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"whCAoBeA,G,YAjBI,SAACC,GAAW,IACrBC,EAAqBD,EAArBC,MAAOC,EAAcF,EAAdE,UAEf,OACE,yBAAKC,GAAG,wBACN,yBAAKC,UAAU,aACb,2BAAOC,QAAQ,gBAAf,SACA,2BAAIJ,IAEN,yBAAKG,UAAU,aACb,2BAAOC,QAAQ,oBAAf,cACA,2BAAIH,O,sBCIGI,G,MAfF,SAACN,GAAW,IACfO,EAAqBP,EAArBO,KAAMC,EAAeR,EAAfQ,WAMd,OACE,yBAAKJ,UAAU,iBAAiBD,GAAII,EAAKJ,GAAIM,QAL3B,WAClBD,EAAWD,EAAKJ,MAKd,yBAAKC,UAAU,aAAaM,MAAO,CAACC,gBAAiBJ,EAAKK,OAC1D,uBAAGR,UAAU,kBAAkBG,EAAKM,SCoC3BC,EA3CG,SAACd,GAAW,IAAD,EACWe,mBAAS,IADpB,mBACpBC,EADoB,KACPC,EADO,OAEKF,mBAASG,KAFd,mBAEpBC,EAFoB,KAEVC,EAFU,KAGnBnB,EAA6CD,EAA7CC,MAAOoB,EAAsCrB,EAAtCqB,SAAUnB,EAA4BF,EAA5BE,UAAWoB,EAAiBtB,EAAjBsB,aAE9Bd,EAAa,SAACL,GACda,EAAYO,SAASpB,IACnBD,EAAYD,GACdqB,EAAarB,GAEfoB,EAAS,GACTJ,EAAe,MAEfI,EAASpB,EAAQ,GACbC,GAAaD,GACfqB,EAAapB,EAAY,GAE3Be,GAAe,SAACO,GAAD,4BAAmBA,GAAnB,CAA8BrB,SAiBjD,OAZAsB,qBAAU,WAIR,IAHA,IAAIC,EAAcP,EAGTQ,EAAID,EAAYE,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC/C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IADK,EAEZ,CAACD,EAAYG,GAAIH,EAAYC,IAA/DD,EAAYC,GAFkC,KAE9BD,EAAYG,GAFkB,KAKjDT,EAAYM,KACX,CAACP,EAAUH,IAGZ,yBAAKb,GAAG,aACLgB,EAASc,KAAI,SAACC,EAAMC,GAAP,OACZ,kBAAC,EAAD,CAAMC,IAAKD,EAAO5B,KAAM2B,EAAM1B,WAAYA,SCtBnC6B,EAfF,WAAO,IAAD,EACStB,mBAAS,GADlB,mBACVd,EADU,KACHoB,EADG,OAEiBN,mBAAS,GAF1B,mBAEVb,EAFU,KAECoB,EAFD,KAIjB,OACE,yBAAKnB,GAAG,QACN,0DACA,kFACA,qFACA,kBAAC,EAAD,CAAYF,MAAOA,EAAOC,UAAWA,IACrC,kBAAC,EAAD,CAAWD,MAAOA,EAAOoB,SAAUA,EAAUnB,UAAWA,EAAWoB,aAAcA,MCHxEgB,MARf,WACE,OACE,yBAAKlC,UAAU,OACb,kBAAC,EAAD,QCHNmC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.08abdecb.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\n\nconst Scoreboard = (props) => {\n  const { score, highScore } = props;\n\n  return(\n    <div id='scoreboard-container'>\n      <div className='score-box'>\n        <label htmlFor='scoreDisplay'>Score</label>\n        <p>{score}</p>       \n      </div>\n      <div className='score-box'>\n        <label htmlFor='highScoreDisplay'>High Score</label>\n        <p>{highScore}</p>\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;","import React from 'react';\nimport './index.css';\n\nconst Card = (props) => {\n  const { data, selectCard } = props;\n\n  const handleClick = () => {\n    selectCard(data.id);\n  }\n\n  return(\n    <div className='card-container' id={data.id} onClick={handleClick} >\n      <div className='card-color' style={{backgroundColor: data.hex}}></div>\n      <p className='card-nameplate'>{data.name}</p>\n    </div>\n  );\n}\n\nexport default Card;","import React, { useState, useEffect } from 'react';\nimport './index.css';\n\nimport * as blueData from '../../data/blue.json';\nimport Card from '../Card';\n\nconst Gameboard = (props) => {\n  const [pickedCards, setPickedCards] = useState([]);\n  const [cardList, setCardList] = useState(blueData.blue);\n  const { score, setScore, highScore, setHighScore } = props;\n\n  const selectCard = (id) => {\n    if (pickedCards.includes(id)) {\n      if (highScore < score) {\n        setHighScore(score);\n      }\n      setScore(0);\n      setPickedCards([]);\n    } else {\n      setScore(score + 1);\n      if (highScore <= score) {\n        setHighScore(highScore + 1);\n      }\n      setPickedCards((prevState) => [...prevState, id]);\n    }\n  }\n\n  // Reshuffle card after every selection\n  useEffect(() => {\n    let workingDeck = cardList;\n\n    // Durstenfeld Shuffle\n    for (let i = workingDeck.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [workingDeck[i], workingDeck[j]] = [workingDeck[j], workingDeck[i]];\n    }\n\n    setCardList(workingDeck);\n  }, [cardList, pickedCards]);\n\n  return(\n    <div id='gameboard'>\n      {cardList.map((card, index) =>\n        <Card key={index} data={card} selectCard={selectCard} />\n      )}\n    </div>\n  );\n}\n\nexport default Gameboard;","import React, { useState } from 'react';\nimport './index.css';\n\nimport Scoreboard from '../Scoreboard';\nimport Gameboard from '../Gameboard';\n\nconst Game = () => {\n  const [score, setScore] = useState(0);\n  const [highScore, setHighScore] = useState(0);\n\n  return(\n    <div id='game'>\n      <h1>Shades of Blue Memory Game</h1>\n      <p>How well can you remember different shades of blue?</p>\n      <p>Click on each card without clicking it more than once!</p>\n      <Scoreboard score={score} highScore={highScore} />\n      <Gameboard score={score} setScore={setScore} highScore={highScore} setHighScore={setHighScore} />\n    </div>\n  );\n}\n\nexport default Game;","import React from 'react';\nimport './App.css';\n\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}